name: Cross-platform Build & Release

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  contents: write  # 用于创建 release

jobs:
  build_and_release:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python 3.12
      uses: actions/setup-python@v4
      with:
        python-version: "3.12"

    - name: Install pip dependencies
      run: |
        python -m pip install --upgrade pip
        pip install nuitka PySide6

    - name: Install system dependencies (Linux/macOS)
      if: runner.os != 'Windows'
      run: |
        if [[ "$(uname)" == "Linux" ]]; then
          sudo apt-get update
          sudo apt-get install -y build-essential python3.12-dev zip
        elif [[ "$(uname)" == "Darwin" ]]; then
          brew install python@3.12 zip
        fi

    - name: Build executable with build.py
      run: |
        python build.py | tee build.log

    - name: Prepare release version
      id: release
      run: |
        if [[ "${{ runner.os }}" == "Windows" ]]; then
          for /f "tokens=2-4 delims=/ " %%a in ('date /t') do set DATE=%%c.%%a.%%b
          echo "RELEASE_TAG=%DATE%" >> $GITHUB_ENV
          echo "RELEASE_NAME=Release-%DATE%" >> $GITHUB_ENV
        else
          DATE=$(date +'%Y.%m.%d')
          echo "RELEASE_TAG=$DATE" >> $GITHUB_ENV
          echo "RELEASE_NAME=Release-$DATE" >> $GITHUB_ENV
        fi

    - name: Zip dist folder
      run: |
        zip -r dist-${{ runner.os }}.zip dist

    - name: Create GitHub Release
      id: create_release
      uses: actions/create-release@v1
      with:
        tag_name: ${{ env.RELEASE_TAG }}
        release_name: ${{ env.RELEASE_NAME }}
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload release assets
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: dist-${{ runner.os }}.zip
        asset_name: dist-${{ runner.os }}.zip
        asset_content_type: application/zip
